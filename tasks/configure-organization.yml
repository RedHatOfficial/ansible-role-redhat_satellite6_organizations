---
- name:  Configure Organization | Validate Required Parameters
  assert:
    that:
    - "satellite_organization is defined"
    - "satellite_organization['name'] is defined"

- name:  Configure Organization | Create Organization
  foreman:
    server_url: "{{ satellite_url }}"
    username: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    entity: organization
    params:
      name: "{{ satellite_organization['name'] }}"
  delegate_to: "{{ satellite_api_basion }}"
  tags:
  - satellite_organizations

- name:  Configure Organization | Upload Manifest
  katello_manifest:
    server_url: "{{ satellite_url }}"
    username: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    organization: "{{ satellite_organization['name'] }}"
    manifest_path: "{{ satellite_organization['manifest'] }}"
    verify_ssl: "{{ satellite_verify_ssl }}"
  delegate_to: "{{ satellite_api_basion }}"
  when: satellite_organization['manifest'] is defined
  tags:
  - satellite_manifests

- name:  Configure Organization | Include Tasks to Create Lifecycle Environment Path
  include_tasks: create-lifecycle-environment-path.yml
  loop: "{{ satellite_organization['lifecycle_environment_paths'] }}"
  loop_control:
    loop_var: lifecycle_environment_path
  when: satellite_organization['lifecycle_environment_paths'] is defined
  tags:
  - satellite_lifecycle_environments

- name: Configure Organization | Enable Red Hat Repository
  katello_repository_set:
    server_url: "{{ satellite_url }}"
    username: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    name: "{{ repository['name'] }}"
    product: "{{ repository['product'] }}"
    organization: "{{ satellite_organization['name'] }}"
    repositories:
    - releasever: "{{ repository['releasever'] | default() }}"
      basearch: "{{ repository['basearch'] }}"
    state: enabled
    verify_ssl: "{{ satellite_verify_ssl }}"
  loop: "{{ satellite_organization['repositories'] }}"
  loop_control:
    loop_var: repository
  delegate_to: "{{ satellite_api_basion }}"
  when: satellite_organization['repositories'] is defined
  tags:
  - satellite_repositories

- name: Configure Organization | Create Sync Plans
  katello:
    server_url: "{{ satellite_url }}"
    username: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    entity: sync_plan
    params: "{{ sync_plan | combine({ 'organization': satellite_organization['name'] }) }}"
  loop: "{{ satellite_organization['sync_plans'] }}"
  loop_control:
    loop_var: sync_plan
  delegate_to: "{{ satellite_api_basion }}"
  when: satellite_organization['sync_plans'] is defined
  tags:
  - satellite_sync_plans

- name: Configure Organization | Immediate Sync Products Async
  katello:
    server_url: "{{ satellite_url }}"
    username: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    entity: product
    action: sync
    params:
      name: "{{ immediate_sync_product }}"
      organization: "{{ satellite_organization['name'] }}"
  loop: "{{ satellite_organization['immediate_sync_products'] }}"
  loop_control:
    loop_var: immediate_sync_product
  delegate_to: "{{ satellite_api_basion }}"
  register: immediate_sync_products_results
  async: 3600
  poll: 0
  when: satellite_organization['immediate_sync_products'] is defined
  tags:
  - satellite_immediate_sync

- name: Configure Organizations | Immediate Sync Products Async | Wait for async tasks
  async_status:
    jid: "{{ immediate_sync_products_result.ansible_job_id }}"
  loop: "{{ immediate_sync_products_results.results }}"
  loop_control:
    loop_var: "immediate_sync_products_result"
  delegate_to: localhost
  register: async_immediate_sync_products_results
  until: async_immediate_sync_products_results.finished
  retries: 120
  sleep: 30
  tags:
  - satellite_immediate_sync

- name: Configure Organizations | Create Content Views
  katello_content_view:
    server_url: "{{ satellite_url }}"
    username: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    organization: "{{ satellite_organization['name'] }}"
    name: "{{ content_view['name'] }}"
    repositories: "{{ content_view['repositories'] }}"
    verify_ssl: "{{ satellite_verify_ssl }}"
  loop: "{{ satellite_organization['content_views'] }}"
  loop_control:
    loop_var: content_view
  delegate_to: "{{ satellite_api_basion }}"
  when: satellite_organization['content_views'] is defined
  tags:
  - satellite_content_views
